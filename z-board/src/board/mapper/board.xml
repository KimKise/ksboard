<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<select id="list" resultType="board.dto.BoardDTO">
		select * from board order by num desc
	</select>
	
	<insert id="insert">
		insert into board(num, writer, subject, passwd, content, filename, filesize) 
		values ( (select nvl(max(num)+1, 1) from board)
				, #{writer}, #{subject}, #{passwd}, #{content}, #{filename}, #{filesize} )
	</insert>
	
	<select id="selectOne" resultType="board.dto.BoardDTO">
		select * from board where num=#{num}
	</select>
	
	<select id="passwd_check" resultType="String">
		select passwd from board 
		where num=#{num} and passwd=#{passwd}
	</select>
	
	<update id="update">
		update board
		set subject=#{subject}, content=#{content}, passwd=#{passwd}, filename=#{filename}, filesize=#{filesize}
		where num=#{num}
	</update>
	
	<delete id="delete">
		delete from board 
		where num=#{num}
	</delete>
	
	<update id="readcount">
		update board set readcount = readcount + 1 
		where num=#{num}
	</update>
	
	<!-- 첨부파일 이름 조회  -->
	<select id="getFileName" resultType="String">
		select filename from board where num=#{num}
	</select>
	
	<update id="plusDownload">
		update board set download = download+1 where num=#{num}
	</update>
	
	
	<!-- 샵{변수}	: 따옴표 포함 /달러{변수}	: 따옴표 제거-->
	<select id="searchList" resultType="board.dto.BoardDTO">
		select * from board 
		<if test="search_option != 'all'">
			where ${search_option} like '%' || #{keyword} || '%'
		</if>
		<if test="search_option == 'all'">
			where writer like '%' || #{keyword} || '%'
			or subject like '%' || #{keyword} || '%'
			or content like '%' || #{keyword} || '%'
		</if>
		order by num desc
	</select>
	
	<select id="commentList" resultType="board.dto.BoardCommentDTO">
		select * from board_comment where board_num = #{board_num} 
		order by comment_num desc
	</select>
	
	<update id="commentAdd">
		insert into board_comment (comment_num, board_num, writer, content)
		values( (select nvl(max(comment_num)+1, 1) from board_comment), #{board_num}, #{writer}, #{content} )
	</update>
</mapper>











